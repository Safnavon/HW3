

Terminals which are not used:

   FLOAT
   ID
   PLUS
   MINUS
   AND
   OR



Grammar
rule 1    program -> expList
rule 2    expList -> exp expList
rule 3    expList -> exp
rule 4    exp -> labelExp
rule 5    exp -> jumpExp
rule 6    exp -> cjumpExp
rule 7    exp -> loadExp
rule 8    exp -> storeExp
rule 9    exp -> binopExp
rule 10   exp -> movExp
rule 11   exp -> strExp
rule 12   exp -> PRINT_INT
rule 13   exp -> PRINT_CHAR
rule 14   exp -> ALLOCATE
rule 15   exp -> EXIT
rule 16   strExp -> STRING_VAR COLON STRING
rule 17   labelExp -> LABEL COLON
rule 18   jumpExp -> JUMP LABEL
rule 19   jumpExp -> JUMP REGISTER
rule 20   jumpExp -> JUMP_AND_LINK LABEL
rule 21   cjumpExp -> BEQ var COMMA var COMMA LABEL
rule 22   cjumpExp -> BNE var COMMA var COMMA LABEL
rule 23   cjumpExp -> BGT var COMMA var COMMA LABEL
rule 24   cjumpExp -> BLT var COMMA var COMMA LABEL
rule 25   cjumpExp -> BGE var COMMA var COMMA LABEL
rule 26   cjumpExp -> BLE var COMMA var COMMA LABEL
rule 27   loadExp -> LOAD var COMMA INT LPAREN var RPAREN
rule 28   loadExp -> LOAD_BYTE var COMMA LPAREN var RPAREN
rule 29   loadExp -> LOAD_ADDRESS var COMMA STRING_VAR
rule 30   loadExp -> LOAD_IMMEDIATE var COMMA INT
rule 31   storeExp -> STORE var COMMA INT LPAREN var RPAREN
rule 32   binopExp -> ADD var COMMA var COMMA var
rule 33   binopExp -> SUB var COMMA var COMMA var
rule 34   binopExp -> MUL var COMMA var COMMA var
rule 35   binopExp -> DIV var COMMA var COMMA var
rule 36   binopExp -> ADD_IMMEDIATE var COMMA var COMMA INT
rule 37   movExp -> MOVE var COMMA var
rule 38   var -> TEMP
rule 39   var -> REGISTER

Terminals, with rules where they appear

$ (-1)
error (256)
INT (258) 27 30 31 36
FLOAT (259)
STRING (260) 16
PRINT_INT (261) 12
PRINT_CHAR (262) 13
STRING_VAR (263) 16 29
ALLOCATE (264) 14
EXIT (265) 15
ID (266)
LABEL (267) 17 18 20 21 22 23 24 25 26
COMMA (268) 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
COLON (269) 16 17
LOAD (270) 27
STORE (271) 31
LOAD_IMMEDIATE (272) 30
LOAD_ADDRESS (273) 29
LOAD_BYTE (274) 28
ADD_IMMEDIATE (275) 36
JUMP (276) 18 19
JUMP_AND_LINK (277) 20
LPAREN (278) 27 28 31
RPAREN (279) 27 28 31
PLUS (280)
MINUS (281)
ADD (282) 32
SUB (283) 33
MUL (284) 34
DIV (285) 35
TEMP (286) 38
BEQ (287) 21
BNE (288) 22
BLT (289) 24
BLE (290) 26
BGT (291) 23
BGE (292) 25
REGISTER (293) 19 39
AND (294)
OR (295)
MOVE (296) 37

Nonterminals, with rules where they appear

program (42)
    on left: 1
expList (43)
    on left: 2 3, on right: 1 2
exp (44)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15, on right: 2 3
strExp (45)
    on left: 16, on right: 11
labelExp (46)
    on left: 17, on right: 4
jumpExp (47)
    on left: 18 19 20, on right: 5
cjumpExp (48)
    on left: 21 22 23 24 25 26, on right: 6
loadExp (49)
    on left: 27 28 29 30, on right: 7
storeExp (50)
    on left: 31, on right: 8
binopExp (51)
    on left: 32 33 34 35 36, on right: 9
movExp (52)
    on left: 37, on right: 10
var (53)
    on left: 38 39, on right: 21 22 23 24 25 26 27 28 29 30 31 32 33
    34 35 36 37


state 0

    PRINT_INT	shift, and go to state 1
    PRINT_CHAR	shift, and go to state 2
    STRING_VAR	shift, and go to state 3
    ALLOCATE	shift, and go to state 4
    EXIT	shift, and go to state 5
    LABEL	shift, and go to state 6
    LOAD	shift, and go to state 7
    STORE	shift, and go to state 8
    LOAD_IMMEDIATE	shift, and go to state 9
    LOAD_ADDRESS	shift, and go to state 10
    LOAD_BYTE	shift, and go to state 11
    ADD_IMMEDIATE	shift, and go to state 12
    JUMP	shift, and go to state 13
    JUMP_AND_LINK	shift, and go to state 14
    ADD 	shift, and go to state 15
    SUB 	shift, and go to state 16
    MUL 	shift, and go to state 17
    DIV 	shift, and go to state 18
    BEQ 	shift, and go to state 19
    BNE 	shift, and go to state 20
    BLT 	shift, and go to state 21
    BLE 	shift, and go to state 22
    BGT 	shift, and go to state 23
    BGE 	shift, and go to state 24
    MOVE	shift, and go to state 25

    program	go to state 126
    expList	go to state 26
    exp 	go to state 27
    strExp	go to state 28
    labelExp	go to state 29
    jumpExp	go to state 30
    cjumpExp	go to state 31
    loadExp	go to state 32
    storeExp	go to state 33
    binopExp	go to state 34
    movExp	go to state 35



state 1

    exp  ->  PRINT_INT .   (rule 12)

    $default	reduce using rule 12 (exp)



state 2

    exp  ->  PRINT_CHAR .   (rule 13)

    $default	reduce using rule 13 (exp)



state 3

    strExp  ->  STRING_VAR . COLON STRING   (rule 16)

    COLON	shift, and go to state 36



state 4

    exp  ->  ALLOCATE .   (rule 14)

    $default	reduce using rule 14 (exp)



state 5

    exp  ->  EXIT .   (rule 15)

    $default	reduce using rule 15 (exp)



state 6

    labelExp  ->  LABEL . COLON   (rule 17)

    COLON	shift, and go to state 37



state 7

    loadExp  ->  LOAD . var COMMA INT LPAREN var RPAREN   (rule 27)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 40



state 8

    storeExp  ->  STORE . var COMMA INT LPAREN var RPAREN   (rule 31)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 41



state 9

    loadExp  ->  LOAD_IMMEDIATE . var COMMA INT   (rule 30)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 42



state 10

    loadExp  ->  LOAD_ADDRESS . var COMMA STRING_VAR   (rule 29)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 43



state 11

    loadExp  ->  LOAD_BYTE . var COMMA LPAREN var RPAREN   (rule 28)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 44



state 12

    binopExp  ->  ADD_IMMEDIATE . var COMMA var COMMA INT   (rule 36)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 45



state 13

    jumpExp  ->  JUMP . LABEL   (rule 18)
    jumpExp  ->  JUMP . REGISTER   (rule 19)

    LABEL	shift, and go to state 46
    REGISTER	shift, and go to state 47



state 14

    jumpExp  ->  JUMP_AND_LINK . LABEL   (rule 20)

    LABEL	shift, and go to state 48



state 15

    binopExp  ->  ADD . var COMMA var COMMA var   (rule 32)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 49



state 16

    binopExp  ->  SUB . var COMMA var COMMA var   (rule 33)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 50



state 17

    binopExp  ->  MUL . var COMMA var COMMA var   (rule 34)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 51



state 18

    binopExp  ->  DIV . var COMMA var COMMA var   (rule 35)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 52



state 19

    cjumpExp  ->  BEQ . var COMMA var COMMA LABEL   (rule 21)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 53



state 20

    cjumpExp  ->  BNE . var COMMA var COMMA LABEL   (rule 22)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 54



state 21

    cjumpExp  ->  BLT . var COMMA var COMMA LABEL   (rule 24)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 55



state 22

    cjumpExp  ->  BLE . var COMMA var COMMA LABEL   (rule 26)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 56



state 23

    cjumpExp  ->  BGT . var COMMA var COMMA LABEL   (rule 23)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 57



state 24

    cjumpExp  ->  BGE . var COMMA var COMMA LABEL   (rule 25)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 58



state 25

    movExp  ->  MOVE . var COMMA var   (rule 37)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 59



state 26

    program  ->  expList .   (rule 1)

    $default	reduce using rule 1 (program)



state 27

    expList  ->  exp . expList   (rule 2)
    expList  ->  exp .   (rule 3)

    PRINT_INT	shift, and go to state 1
    PRINT_CHAR	shift, and go to state 2
    STRING_VAR	shift, and go to state 3
    ALLOCATE	shift, and go to state 4
    EXIT	shift, and go to state 5
    LABEL	shift, and go to state 6
    LOAD	shift, and go to state 7
    STORE	shift, and go to state 8
    LOAD_IMMEDIATE	shift, and go to state 9
    LOAD_ADDRESS	shift, and go to state 10
    LOAD_BYTE	shift, and go to state 11
    ADD_IMMEDIATE	shift, and go to state 12
    JUMP	shift, and go to state 13
    JUMP_AND_LINK	shift, and go to state 14
    ADD 	shift, and go to state 15
    SUB 	shift, and go to state 16
    MUL 	shift, and go to state 17
    DIV 	shift, and go to state 18
    BEQ 	shift, and go to state 19
    BNE 	shift, and go to state 20
    BLT 	shift, and go to state 21
    BLE 	shift, and go to state 22
    BGT 	shift, and go to state 23
    BGE 	shift, and go to state 24
    MOVE	shift, and go to state 25

    $default	reduce using rule 3 (expList)

    expList	go to state 60
    exp 	go to state 27
    strExp	go to state 28
    labelExp	go to state 29
    jumpExp	go to state 30
    cjumpExp	go to state 31
    loadExp	go to state 32
    storeExp	go to state 33
    binopExp	go to state 34
    movExp	go to state 35



state 28

    exp  ->  strExp .   (rule 11)

    $default	reduce using rule 11 (exp)



state 29

    exp  ->  labelExp .   (rule 4)

    $default	reduce using rule 4 (exp)



state 30

    exp  ->  jumpExp .   (rule 5)

    $default	reduce using rule 5 (exp)



state 31

    exp  ->  cjumpExp .   (rule 6)

    $default	reduce using rule 6 (exp)



state 32

    exp  ->  loadExp .   (rule 7)

    $default	reduce using rule 7 (exp)



state 33

    exp  ->  storeExp .   (rule 8)

    $default	reduce using rule 8 (exp)



state 34

    exp  ->  binopExp .   (rule 9)

    $default	reduce using rule 9 (exp)



state 35

    exp  ->  movExp .   (rule 10)

    $default	reduce using rule 10 (exp)



state 36

    strExp  ->  STRING_VAR COLON . STRING   (rule 16)

    STRING	shift, and go to state 61



state 37

    labelExp  ->  LABEL COLON .   (rule 17)

    $default	reduce using rule 17 (labelExp)



state 38

    var  ->  TEMP .   (rule 38)

    $default	reduce using rule 38 (var)



state 39

    var  ->  REGISTER .   (rule 39)

    $default	reduce using rule 39 (var)



state 40

    loadExp  ->  LOAD var . COMMA INT LPAREN var RPAREN   (rule 27)

    COMMA	shift, and go to state 62



state 41

    storeExp  ->  STORE var . COMMA INT LPAREN var RPAREN   (rule 31)

    COMMA	shift, and go to state 63



state 42

    loadExp  ->  LOAD_IMMEDIATE var . COMMA INT   (rule 30)

    COMMA	shift, and go to state 64



state 43

    loadExp  ->  LOAD_ADDRESS var . COMMA STRING_VAR   (rule 29)

    COMMA	shift, and go to state 65



state 44

    loadExp  ->  LOAD_BYTE var . COMMA LPAREN var RPAREN   (rule 28)

    COMMA	shift, and go to state 66



state 45

    binopExp  ->  ADD_IMMEDIATE var . COMMA var COMMA INT   (rule 36)

    COMMA	shift, and go to state 67



state 46

    jumpExp  ->  JUMP LABEL .   (rule 18)

    $default	reduce using rule 18 (jumpExp)



state 47

    jumpExp  ->  JUMP REGISTER .   (rule 19)

    $default	reduce using rule 19 (jumpExp)



state 48

    jumpExp  ->  JUMP_AND_LINK LABEL .   (rule 20)

    $default	reduce using rule 20 (jumpExp)



state 49

    binopExp  ->  ADD var . COMMA var COMMA var   (rule 32)

    COMMA	shift, and go to state 68



state 50

    binopExp  ->  SUB var . COMMA var COMMA var   (rule 33)

    COMMA	shift, and go to state 69



state 51

    binopExp  ->  MUL var . COMMA var COMMA var   (rule 34)

    COMMA	shift, and go to state 70



state 52

    binopExp  ->  DIV var . COMMA var COMMA var   (rule 35)

    COMMA	shift, and go to state 71



state 53

    cjumpExp  ->  BEQ var . COMMA var COMMA LABEL   (rule 21)

    COMMA	shift, and go to state 72



state 54

    cjumpExp  ->  BNE var . COMMA var COMMA LABEL   (rule 22)

    COMMA	shift, and go to state 73



state 55

    cjumpExp  ->  BLT var . COMMA var COMMA LABEL   (rule 24)

    COMMA	shift, and go to state 74



state 56

    cjumpExp  ->  BLE var . COMMA var COMMA LABEL   (rule 26)

    COMMA	shift, and go to state 75



state 57

    cjumpExp  ->  BGT var . COMMA var COMMA LABEL   (rule 23)

    COMMA	shift, and go to state 76



state 58

    cjumpExp  ->  BGE var . COMMA var COMMA LABEL   (rule 25)

    COMMA	shift, and go to state 77



state 59

    movExp  ->  MOVE var . COMMA var   (rule 37)

    COMMA	shift, and go to state 78



state 60

    expList  ->  exp expList .   (rule 2)

    $default	reduce using rule 2 (expList)



state 61

    strExp  ->  STRING_VAR COLON STRING .   (rule 16)

    $default	reduce using rule 16 (strExp)



state 62

    loadExp  ->  LOAD var COMMA . INT LPAREN var RPAREN   (rule 27)

    INT 	shift, and go to state 79



state 63

    storeExp  ->  STORE var COMMA . INT LPAREN var RPAREN   (rule 31)

    INT 	shift, and go to state 80



state 64

    loadExp  ->  LOAD_IMMEDIATE var COMMA . INT   (rule 30)

    INT 	shift, and go to state 81



state 65

    loadExp  ->  LOAD_ADDRESS var COMMA . STRING_VAR   (rule 29)

    STRING_VAR	shift, and go to state 82



state 66

    loadExp  ->  LOAD_BYTE var COMMA . LPAREN var RPAREN   (rule 28)

    LPAREN	shift, and go to state 83



state 67

    binopExp  ->  ADD_IMMEDIATE var COMMA . var COMMA INT   (rule 36)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 84



state 68

    binopExp  ->  ADD var COMMA . var COMMA var   (rule 32)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 85



state 69

    binopExp  ->  SUB var COMMA . var COMMA var   (rule 33)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 86



state 70

    binopExp  ->  MUL var COMMA . var COMMA var   (rule 34)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 87



state 71

    binopExp  ->  DIV var COMMA . var COMMA var   (rule 35)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 88



state 72

    cjumpExp  ->  BEQ var COMMA . var COMMA LABEL   (rule 21)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 89



state 73

    cjumpExp  ->  BNE var COMMA . var COMMA LABEL   (rule 22)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 90



state 74

    cjumpExp  ->  BLT var COMMA . var COMMA LABEL   (rule 24)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 91



state 75

    cjumpExp  ->  BLE var COMMA . var COMMA LABEL   (rule 26)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 92



state 76

    cjumpExp  ->  BGT var COMMA . var COMMA LABEL   (rule 23)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 93



state 77

    cjumpExp  ->  BGE var COMMA . var COMMA LABEL   (rule 25)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 94



state 78

    movExp  ->  MOVE var COMMA . var   (rule 37)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 95



state 79

    loadExp  ->  LOAD var COMMA INT . LPAREN var RPAREN   (rule 27)

    LPAREN	shift, and go to state 96



state 80

    storeExp  ->  STORE var COMMA INT . LPAREN var RPAREN   (rule 31)

    LPAREN	shift, and go to state 97



state 81

    loadExp  ->  LOAD_IMMEDIATE var COMMA INT .   (rule 30)

    $default	reduce using rule 30 (loadExp)



state 82

    loadExp  ->  LOAD_ADDRESS var COMMA STRING_VAR .   (rule 29)

    $default	reduce using rule 29 (loadExp)



state 83

    loadExp  ->  LOAD_BYTE var COMMA LPAREN . var RPAREN   (rule 28)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 98



state 84

    binopExp  ->  ADD_IMMEDIATE var COMMA var . COMMA INT   (rule 36)

    COMMA	shift, and go to state 99



state 85

    binopExp  ->  ADD var COMMA var . COMMA var   (rule 32)

    COMMA	shift, and go to state 100



state 86

    binopExp  ->  SUB var COMMA var . COMMA var   (rule 33)

    COMMA	shift, and go to state 101



state 87

    binopExp  ->  MUL var COMMA var . COMMA var   (rule 34)

    COMMA	shift, and go to state 102



state 88

    binopExp  ->  DIV var COMMA var . COMMA var   (rule 35)

    COMMA	shift, and go to state 103



state 89

    cjumpExp  ->  BEQ var COMMA var . COMMA LABEL   (rule 21)

    COMMA	shift, and go to state 104



state 90

    cjumpExp  ->  BNE var COMMA var . COMMA LABEL   (rule 22)

    COMMA	shift, and go to state 105



state 91

    cjumpExp  ->  BLT var COMMA var . COMMA LABEL   (rule 24)

    COMMA	shift, and go to state 106



state 92

    cjumpExp  ->  BLE var COMMA var . COMMA LABEL   (rule 26)

    COMMA	shift, and go to state 107



state 93

    cjumpExp  ->  BGT var COMMA var . COMMA LABEL   (rule 23)

    COMMA	shift, and go to state 108



state 94

    cjumpExp  ->  BGE var COMMA var . COMMA LABEL   (rule 25)

    COMMA	shift, and go to state 109



state 95

    movExp  ->  MOVE var COMMA var .   (rule 37)

    $default	reduce using rule 37 (movExp)



state 96

    loadExp  ->  LOAD var COMMA INT LPAREN . var RPAREN   (rule 27)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 110



state 97

    storeExp  ->  STORE var COMMA INT LPAREN . var RPAREN   (rule 31)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 111



state 98

    loadExp  ->  LOAD_BYTE var COMMA LPAREN var . RPAREN   (rule 28)

    RPAREN	shift, and go to state 112



state 99

    binopExp  ->  ADD_IMMEDIATE var COMMA var COMMA . INT   (rule 36)

    INT 	shift, and go to state 113



state 100

    binopExp  ->  ADD var COMMA var COMMA . var   (rule 32)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 114



state 101

    binopExp  ->  SUB var COMMA var COMMA . var   (rule 33)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 115



state 102

    binopExp  ->  MUL var COMMA var COMMA . var   (rule 34)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 116



state 103

    binopExp  ->  DIV var COMMA var COMMA . var   (rule 35)

    TEMP	shift, and go to state 38
    REGISTER	shift, and go to state 39

    var 	go to state 117



state 104

    cjumpExp  ->  BEQ var COMMA var COMMA . LABEL   (rule 21)

    LABEL	shift, and go to state 118



state 105

    cjumpExp  ->  BNE var COMMA var COMMA . LABEL   (rule 22)

    LABEL	shift, and go to state 119



state 106

    cjumpExp  ->  BLT var COMMA var COMMA . LABEL   (rule 24)

    LABEL	shift, and go to state 120



state 107

    cjumpExp  ->  BLE var COMMA var COMMA . LABEL   (rule 26)

    LABEL	shift, and go to state 121



state 108

    cjumpExp  ->  BGT var COMMA var COMMA . LABEL   (rule 23)

    LABEL	shift, and go to state 122



state 109

    cjumpExp  ->  BGE var COMMA var COMMA . LABEL   (rule 25)

    LABEL	shift, and go to state 123



state 110

    loadExp  ->  LOAD var COMMA INT LPAREN var . RPAREN   (rule 27)

    RPAREN	shift, and go to state 124



state 111

    storeExp  ->  STORE var COMMA INT LPAREN var . RPAREN   (rule 31)

    RPAREN	shift, and go to state 125



state 112

    loadExp  ->  LOAD_BYTE var COMMA LPAREN var RPAREN .   (rule 28)

    $default	reduce using rule 28 (loadExp)



state 113

    binopExp  ->  ADD_IMMEDIATE var COMMA var COMMA INT .   (rule 36)

    $default	reduce using rule 36 (binopExp)



state 114

    binopExp  ->  ADD var COMMA var COMMA var .   (rule 32)

    $default	reduce using rule 32 (binopExp)



state 115

    binopExp  ->  SUB var COMMA var COMMA var .   (rule 33)

    $default	reduce using rule 33 (binopExp)



state 116

    binopExp  ->  MUL var COMMA var COMMA var .   (rule 34)

    $default	reduce using rule 34 (binopExp)



state 117

    binopExp  ->  DIV var COMMA var COMMA var .   (rule 35)

    $default	reduce using rule 35 (binopExp)



state 118

    cjumpExp  ->  BEQ var COMMA var COMMA LABEL .   (rule 21)

    $default	reduce using rule 21 (cjumpExp)



state 119

    cjumpExp  ->  BNE var COMMA var COMMA LABEL .   (rule 22)

    $default	reduce using rule 22 (cjumpExp)



state 120

    cjumpExp  ->  BLT var COMMA var COMMA LABEL .   (rule 24)

    $default	reduce using rule 24 (cjumpExp)



state 121

    cjumpExp  ->  BLE var COMMA var COMMA LABEL .   (rule 26)

    $default	reduce using rule 26 (cjumpExp)



state 122

    cjumpExp  ->  BGT var COMMA var COMMA LABEL .   (rule 23)

    $default	reduce using rule 23 (cjumpExp)



state 123

    cjumpExp  ->  BGE var COMMA var COMMA LABEL .   (rule 25)

    $default	reduce using rule 25 (cjumpExp)



state 124

    loadExp  ->  LOAD var COMMA INT LPAREN var RPAREN .   (rule 27)

    $default	reduce using rule 27 (loadExp)



state 125

    storeExp  ->  STORE var COMMA INT LPAREN var RPAREN .   (rule 31)

    $default	reduce using rule 31 (storeExp)



state 126

    $   	go to state 127



state 127

    $   	go to state 128



state 128

    $default	accept
